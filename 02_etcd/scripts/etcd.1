#!/bin/bash

SCRIPT=$(basename ${0})
SSL="ssl"

CLNT_PORT=2379
PEER_PORT=2800

if [ ! -f "${SSL}/ca.crt" ]; then
	openssl genrsa -out ${SSL}/ca.key 2048
	openssl req -new -x509 -key ca.key -config openssl.cnf -out ca.crt
fi

if [ ! -f "${SSL}/${SCRIPT}.crt" ]; then
	openssl genrsa -out ${SSL}/${SCRIPT}.key 2048
	openssl req -new -config openssl.cnf -key ${SSL}/${SCRIPT}.key -out ${SSL}/${SCRIPT}.csr
	openssl x509 -req -in ${SSL}/${SCRIPT}.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out ${SSL}/${SCRIPT}.crt
fi

#docker run --name etcd.1 \
	-e ETCD_CLIENT_PORT=${CLNT_PORT} \
	-e ETCD_PEER_PORT=${PEER_PORT} \
	-v $(pwd)/${SSL}:/etcd/ssl/ \
	-e CLIENT_TRUSTED_CA_FILE=ca.crt \
	-e CLIENT_CERT_FILE=${SCRIPT}.crt \
	-e CLIENT_KEY_FILE=${SCRIPT}.key \
	-e PEER_TRUSTED_CA_FILE=ca.crt \
	-e PEER_CERT_FILE=${SCRIPT}.crt \
	-e PEER_KEY_FILE=${SCRIPT}.key \
	-e 

	
